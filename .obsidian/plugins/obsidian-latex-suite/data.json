{
  "snippets": "[\n    // 文本区域快捷键\n    // 其它片段\n    {trigger: \"1\", replacement: \"**$0**$1\", options: \"t\",priority: -2},\n    {trigger: \"2\", replacement: \"$\\\\displaystyle $0$$1\", options: \"t\",priority: -2},\n    {trigger: \"la\", replacement: \"$\\\\leftarrow$\", options: \"t\"},\n    {trigger: \"nla\", replacement: \"$\\\\nleftarrow$\", options: \"t\"},\n    {trigger: \"nra\", replacement: \"$\\\\nrightarrow$\", options: \"t\"},\n    {trigger: \"ra\", replacement: \"$\\\\rightarrow$\", options: \"t\"},\n    {trigger: \"lra\", replacement: \"$\\\\Leftrightarrow$\", options: \"t\"},\n    {trigger: \"3\", replacement: \"$$\\n\\\\begin{equation}\\n\\\\begin{aligned}\\n$0\\n\\\\end{aligned}\\n\\\\end{equation}\\n$$\", options: \"t\",priority: -2},\n    {trigger: \"4\", replacement: \"$$\\\\begin{align}$0\\\\end{align}$$\", options: \"t\",priority: -2},\n    {trigger: \"每日\", replacement: \"### 武忠祥每日一题 \", options: \"t\"},\n    {trigger: \"基础\", replacement: \"## 基础300题 \", options: \"t\"},\n    {trigger: \"同\", replacement: \"### 同济高数p\", options: \"t\"},\n    {trigger: \"注\", replacement: \">[!note] 【注】\\n>$0\", options: \"t\"},\n    {trigger: \"c([A-Za-z]*)\", replacement: \"```[[0]]\\n$0\\n```\", options: \"rt\"},\n    // {trigger: \"n\", replacement: \"$n$$0\", options: \"t\",priority: -1},\n    // 数学片段\n    {trigger: \"x\", replacement: \"$x$$0\", options: \"t\"},\n    // {trigger: \"x(.*)\", replacement: \"$x_{[[0]]}$$0\", options: \"tr\"},\n    {trigger: \"([A-Za-z])([0-9A-Za-z]*)\", replacement: \"$[[0]]_{[[1]]}$$0\", options: \"rt\", priority: -1},\n    // {trigger: \"x0\", replacement: \"$x_0$$0\", options: \"t\"},\n    {trigger: \"ml\", replacement: \"$$0$$1\", options: \"t\"},\n    {trigger: \"mk\", replacement: \"$$\\n\\\\begin{equation}\\n\\\\begin{aligned}\\n$0\\n\\\\end{aligned}\\n\\\\end{equation}\\n$$\", options: \"t\"},\n    {trigger: \"red\", replacement: \">[!red] $0\", options: \"t\"},\n    {trigger: \"blu\", replacement: \">[!blu] $0\", options: \"t\"},\n    {trigger: \"yel\", replacement: \">[!yel] $0\", options: \"t\"},\n    {trigger: \"·\", replacement: \"`$0`\", options: \"t\"},\n    // {trigger: \"#(.*)\\|\", replacement: \"#[[0]]\\|[[0]] $0\", options: \"rt\"},\n    // {trigger: \"(?=\\/)(.*)#(.*)|\", replacement: (match) => {\n    //     const n1 = match[1];\n    //     const n2 = match[2];\n    //     var s = n1 + '#' + n2 + n2;\n    //     return s.slice(0,-1)\n    // }, options: \"rt\", priority: -3},\n\n    // 数学区域快捷键\n    // 区分行内和块\n    {trigger: \"//\", replacement: \"\\\\dfrac{$0}{$1}$2\", options: \"MA\"},\n    {trigger: \"//\", replacement: \"\\\\frac{$0}{$1}$2\", options: \"nA\"},\n    // 不区分\n    // {trigger: \"([A-Za-z])(\\\\d)\", replacement: \"[[0]]_{[[1]]} $0\", options: \"rm\"},\n    {trigger: \"tr([A-Za-z]*)\", replacement: \"\\\\triangle [[0]]$0\", options: \"rm\", priority: 1},\n    {trigger: \"trd([A-Za-z]*)\", replacement: \"\\\\triangledown [[0]] $0\", options: \"rm\", priority: 1},\n    {trigger: \"([A-Za-z])([0-9A-Za-z])\", replacement: \"[[0]]_{[[1]] $0} $1\", options: \"rm\", priority: -1},\n    {trigger: \"int(-?[0-9a-zA-z]*),(-?[0-9a-zA-z]*)\", replacement: \"\\\\int^{[[0]]}_{[[1]]} $0\", options: \"rm\"},\n    {trigger: \"v\", replacement: \"\\\\vec{$0} $1\", options: \"rm\", priority: 1},\n    {trigger: \"v([a-zA-z]*)\", replacement: \"\\\\vec{[[0]]} $0\", options: \"rm\"},\n    {trigger: \"+-\", replacement: \"\\\\pm $0\", options: \"m\"},\n    {trigger: \"ta\", replacement: \"\\\\triangle $0\", options: \"m\"},\n    {trigger: \"--\", replacement: \"+ $0\", options: \"mA\"},\n    {trigger: \"|\", replacement: \"\\\\left| $0 \\\\right| $1\", options: \"m\"},\n    {trigger: \"su\", replacement: \"\\\\sum\\\\limits^{$0}_{$1}\", options: \"m\"},\n    {trigger: \"le\", replacement: \"\\\\leqslant\", options: \"m\"},\n    {trigger: \"ge\", replacement: \"\\\\geqslant\", options: \"m\"},\n    {trigger: \"li\", replacement: \"\\\\lim\\\\limits_{$0}$1\", options: \"m\"},\n    {trigger: \"sq\", replacement: \"\\\\sqrt[$0]{$1}$2\", options: \"m\"},\n    {trigger: \"dis\", replacement: \"\\\\displaystyle\", options: \"m\"},\n    {trigger: \"cos\", replacement: \"\\\\cos \", options: \"mA\"},\n    {trigger: \"sin\", replacement: \"\\\\sin \", options: \"mA\"},\n    {trigger: \"tan\", replacement: \"\\\\tan \", options: \"mA\"},\n    {trigger: \"sec\", replacement: \"\\\\sec \", options: \"mA\"},\n    {trigger: \"csc\", replacement: \"\\\\csc \", options: \"mA\"},\n    {trigger: \"cot\", replacement: \"\\\\cot \", options: \"mA\"},\n    {trigger: \"arcsin\", replacement: \"\\\\arcsin \", options: \"mA\"},\n    {trigger: \"arccos\", replacement: \"\\\\arccos \", options: \"mA\"},\n    {trigger: \"arctan\", replacement: \"\\\\arctan \", options: \"mA\"},\n    {trigger: \"arcsec\", replacement: \"\\\\DeclareMathOperator{\\\\arcsec}{arcsec}\\\\arcsec \", options: \"mA\"},\n    {trigger: \"arccsc\", replacement: \"\\\\DeclareMathOperator{\\\\arccsc}{arccsc}\\\\arccsc \", options: \"mA\"},\n    {trigger: \"arccot\", replacement: \"\\\\DeclareMathOperator{\\\\arccot}{arccot}\\\\arccot \", options: \"mA\"},\n    {trigger: \"xi\", replacement: \"\\\\xi \", options: \"m\"},\n    {trigger: \"pi\", replacement: \"\\\\pi $0\", options: \"m\"},\n    {trigger: \"inf\", replacement: \"\\\\infty \", options: \"mA\"},\n    {trigger: \"phi\", replacement: \"\\\\phi \", options: \"m\"},\n    {trigger: \"par\", replacement: \"\\\\partial \", options: \"m\"},\n    {trigger: \"^\", replacement: \"^{$0}$1\", options: \"mA\"},\n    {trigger: \"_\", replacement: \"_{$0}$1\", options: \"mA\"},\n    {trigger: \"ln\", replacement: \"\\\\ln \", options: \"mA\"},\n    {trigger: \"(\", replacement: \"($0)$1\", options: \"mA\"},\n    {trigger: \"in\", replacement: \"\\\\in \", options: \"m\"},\n    {trigger: \"int\", replacement: \"\\\\int^{$0}_{$1} $2\", options: \"m\"},\n    {trigger: \"ra1\", replacement: \"\\\\rightarrow $0 \", options: \"m\"},\n    {trigger: \"la1\", replacement: \"\\\\lightarrow $0 \", options: \"m\"},\n    {trigger: \"ra2\", replacement: \"\\\\Rightarrow $0 \", options: \"m\"},\n    {trigger: \"la2\", replacement: \"\\\\Lightarrow $0 \", options: \"m\"},\n    {trigger: \"os\", replacement: \"\\\\overset{$0}{$1}$2 \", options: \"m\"},\n    {trigger: \"ol\", replacement: \"\\\\overline{$0}$1 \", options: \"m\"},\n    {trigger: \"ora\", replacement: \"\\\\overrightarrow{$0} $1\", options: \"m\"},\n    {trigger: \"ola\", replacement: \"\\\\overleftarrow{$0} $1\", options: \"m\"},\n    {trigger: \"、[\", replacement: \"\\\\left\\\\{$0\\\\right\\\\}$1\", options: \"mA\"},\n    {trigger: \"\\\\[\", replacement: \"\\\\left\\\\{$0\\\\right\\\\}$1\", options: \"mA\"},\n    {trigger: \"1[\", replacement: \"\\\\left\\\\{$0\\\\right\\\\}$1\", options: \"m\"},\n    // {trigger: \"1[]\", replacement: \"\\\\left\\\\{$0\\\\right\\\\}$1\", options: \"m\"},\n    // {trigger: \"1【\", replacement: \"\\\\left\\\\{$0\\\\right\\\\}$1\", options: \"m\"},\n    {trigger: \"2[\", replacement: \"\\\\left[$0\\\\right]$1\", options: \"m\"},\n    // {trigger: \"2[]\", replacement: \"\\\\left[$0\\\\right]$1\", options: \"m\"},\n    {trigger: \"2【\", replacement: \"\\\\left[$0\\\\right]$1\", options: \"m\"},\n    {trigger: \"2【\", replacement: \"\\\\left[$0\\\\right]$1\", options: \"m\"},\n    // {trigger: \"[\", replacement: \"\\\\left[$0\\\\right]$1\", options: \"m`\"},\n    {trigger: \"vert\", replacement: \"\\\\left\\\\vert $0 \\\\right\\\\vert $1\", options: \"m\",priority: 2},\n    {trigger: \"、\", replacement: \"\\\\\", options: \"m\"},\n    {trigger: \"fr\", replacement: \"\\\\frac{$0}{$1}$2\", options: \"m\"},\n    // {trigger: \"matrix\", replacement: \"\\\\begin{matrix}\\n$0\\n\\\\end{matrix}\", options: \"m\",priority: 2},\n    {trigger: \"matrix2\", replacement: \"\\\\left[\\\\begin{matrix}$0\\\\end{matrix}\\\\right]\", options: \"m\",priority: 2},\n    {trigger: \"matrix1\", replacement: \"\\\\left|\\\\begin{matrix}$0\\\\end{matrix}\\\\right|\", options: \"m\",priority: 2},\n    {trigger: \"matrix3\", replacement: \"\\\\left(\\\\begin{matrix}$0\\\\end{matrix}\\\\right)\", options: \"m\",priority: 2},\n    {trigger: \"array2\", replacement: \"\\\\left[\\\\begin{array}$0\\\\end{array}\\\\right]\", options: \"m\",priority: 2},\n    {trigger: \"array1\", replacement: \"\\\\left|\\\\begin{array}$0\\\\end{array}\\\\right|\", options: \"m\",priority: 2},\n    {trigger: \"case\", replacement: \"\\\\begin{cases} $0 \\\\\\\\ $1 \\\\end{cases}$2\", options: \"m\",priority: 2},\n    \n]\n",
  "snippetVariables": "{\n\t\"${GREEK}\": \"alpha|beta|gamma|Gamma|delta|Delta|epsilon|varepsilon|zeta|eta|theta|vartheta|Theta|iota|kappa|lambda|Lambda|mu|nu|xi|omicron|pi|rho|varrho|sigma|Sigma|tau|upsilon|Upsilon|phi|varphi|Phi|chi|psi|omega|Omega\",\n\t\"${SYMBOL}\": \"parallel|perp|partial|nabla|hbar|ell|infty|oplus|ominus|otimes|oslash|square|star|dagger|vee|wedge|subseteq|subset|supseteq|supset|emptyset|exists|nexists|forall|implies|impliedby|iff|setminus|neg|lor|land|bigcup|bigcap|cdot|times|simeq|approx\",\n\t\"${MORE_SYMBOLS}\": \"leq|geq|neq|gg|ll|equiv|sim|propto|rightarrow|leftarrow|Rightarrow|Leftarrow|leftrightarrow|to|mapsto|cap|cup|in|sum|prod|exp|ln|log|det|dots|vdots|ddots|pm|mp|int|iint|iiint|oint\"\n}\n",
  "snippetsEnabled": true,
  "snippetsTrigger": "Tab",
  "suppressSnippetTriggerOnIME": true,
  "removeSnippetWhitespace": true,
  "autoDelete$": true,
  "loadSnippetsFromFile": false,
  "loadSnippetVariablesFromFile": false,
  "snippetsFileLocation": "",
  "snippetVariablesFileLocation": "",
  "concealEnabled": false,
  "colorPairedBracketsEnabled": true,
  "highlightCursorBracketsEnabled": true,
  "mathPreviewEnabled": true,
  "mathPreviewPositionIsAbove": true,
  "autofractionEnabled": true,
  "autofractionSymbol": "\\frac",
  "autofractionBreakingChars": "+-=\t",
  "matrixShortcutsEnabled": true,
  "taboutEnabled": true,
  "autoEnlargeBrackets": false,
  "wordDelimiters": "., +-\\n\t:;!?\\/{}[]()=~$",
  "autofractionExcludedEnvs": "[\n\t\t[\"^{\", \"}\"],\n\t\t[\"\\\\pu{\", \"}\"]\n\t]",
  "matrixShortcutsEnvNames": "pmatrix, cases, align, bmatrix, Bmatrix, vmatrix, Vmatrix, array, matrix",
  "autoEnlargeBracketsTriggers": "sum, int,, frac, prod, bigcup, bigcap",
  "forceMathLanguages": "math"
}